{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/constants.ts", "../src/utils/WorkdayClient.ts", "../src/utils/positionsCount.ts", "../src/pages/Life.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export const prefix = 'data';\n\nexport const SELECTORS = {\n  positionsCount: `[${prefix}=positions-count]`,\n  viewOpportunities: `[${prefix}=view-opportunities]`,\n  usLoadAll: `[${prefix}=us-load-all-container]`,\n  count: `[${prefix}=count]`,\n  locationCount: `[${prefix}=location-count]`,\n  locationInput: `[${prefix}=location-input]`,\n  titleInput: `[${prefix}=title-input]`,\n  searchButton: `[${prefix}=search-btn]`,\n  name: `[${prefix}=name]`,\n  input: `[${prefix}=input]`,\n  checkbox: `[${prefix}=checkbox]`,\n  loadMore: `[${prefix}=load-more]`,\n  title: `[${prefix}=title]`,\n  time: `[${prefix}=time]`,\n  location: `[${prefix}=location]`,\n  description: `[${prefix}=description]`,\n  jobRequisitionId: `[${prefix}=job-requisition-id]`,\n  subCategory: (subCategory: string) => `[${prefix}-sub-category=\"${subCategory}\"]`,\n};\n\nexport const ATTRIBUTES = {\n  dataChecked: 'data-checked',\n  checkedClass: 'w--redirected-checked',\n};\n\nconst SALES = 'Sales';\nconst SERVICE = 'Service';\nconst OVERHEAD = 'Overhead';\nconst PARTS = 'Parts';\nexport const ALL_STORE_SUB_CATEGORIES = [SALES, SERVICE, OVERHEAD, PARTS];\n\nexport const URL_PARAMS_KEYS = {\n  location: 'location',\n};\n\nexport const ACCESSORS = {\n  location: (job: Job) => job.State || '',\n  title: (job: Job) => job.title || '',\n};\n\n// export const apiBaseUrl = 'http://127.0.0.1:49302/';\nexport const apiBaseUrl = 'https://cors-middleware.lithia.workers.dev/';\n", "import { apiBaseUrl } from './constants';\n\nexport class WorkdayClient {\n  private jobs: Job[] | null;\n  constructor() {\n    this.jobs = null;\n  }\n\n  public async fetchJobs(): Promise<Job[] | null> {\n    if (this.jobs) {\n      return Promise.resolve(this.jobs);\n    }\n    const { Report_Entry } = (await this.fetchJobsFromAPI()) || {};\n    if (Report_Entry) {\n      this.jobs = Report_Entry;\n    }\n\n    return Promise.resolve(this.jobs);\n  }\n\n  private async fetchJobsFromAPI(): Promise<JobResponse | null> {\n    try {\n      const response = await fetch(`${apiBaseUrl}jobs`);\n      const jobs = await response.json();\n\n      return jobs;\n    } catch (error) {\n      console.error('Error fetching jobs', error);\n      return null;\n    }\n  }\n}\n", "import { SELECTORS } from './constants';\n\nexport const positionsCountMap = (\n  positionsCount: number,\n  suffix = '',\n  container = document.body\n) => {\n  const positionCountEls = container.querySelectorAll<HTMLElement>(SELECTORS.positionsCount);\n  positionCountEls.forEach((el) => {\n    el.textContent = positionsCount.toLocaleString() + suffix;\n  });\n};\n", "import { WorkdayClient } from '$utils/WorkdayClient';\nimport { positionsCountMap } from '$utils/positionsCount';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(async () => {\n  const workdayClient = new WorkdayClient();\n  const jobs = await workdayClient.fetchJobs();\n\n  if (jobs) {\n    positionsCountMap(jobs.length);\n  } else {\n    console.error('Error fetching jobs');\n  }\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACAtF,MAAM,SAAS;AAEf,MAAM,YAAY;AAAA,IACvB,gBAAgB,IAAI,MAAM;AAAA,IAC1B,mBAAmB,IAAI,MAAM;AAAA,IAC7B,WAAW,IAAI,MAAM;AAAA,IACrB,OAAO,IAAI,MAAM;AAAA,IACjB,eAAe,IAAI,MAAM;AAAA,IACzB,eAAe,IAAI,MAAM;AAAA,IACzB,YAAY,IAAI,MAAM;AAAA,IACtB,cAAc,IAAI,MAAM;AAAA,IACxB,MAAM,IAAI,MAAM;AAAA,IAChB,OAAO,IAAI,MAAM;AAAA,IACjB,UAAU,IAAI,MAAM;AAAA,IACpB,UAAU,IAAI,MAAM;AAAA,IACpB,OAAO,IAAI,MAAM;AAAA,IACjB,MAAM,IAAI,MAAM;AAAA,IAChB,UAAU,IAAI,MAAM;AAAA,IACpB,aAAa,IAAI,MAAM;AAAA,IACvB,kBAAkB,IAAI,MAAM;AAAA,IAC5B,aAAa,CAAC,gBAAwB,IAAI,MAAM,kBAAkB,WAAW;AAAA,EAC/E;AAuBO,MAAM,aAAa;;;AC1CnB,MAAM,gBAAN,MAAoB;AAAA,IAEzB,cAAc;AACZ,WAAK,OAAO;AAAA,IACd;AAAA,IAEA,MAAa,YAAmC;AAC9C,UAAI,KAAK,MAAM;AACb,eAAO,QAAQ,QAAQ,KAAK,IAAI;AAAA,MAClC;AACA,YAAM,EAAE,aAAa,IAAK,MAAM,KAAK,iBAAiB,KAAM,CAAC;AAC7D,UAAI,cAAc;AAChB,aAAK,OAAO;AAAA,MACd;AAEA,aAAO,QAAQ,QAAQ,KAAK,IAAI;AAAA,IAClC;AAAA,IAEA,MAAc,mBAAgD;AAC5D,UAAI;AACF,cAAM,WAAW,MAAM,MAAM,GAAG,UAAU,MAAM;AAChD,cAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,eAAO;AAAA,MACT,SAAS,OAAO;AACd,gBAAQ,MAAM,uBAAuB,KAAK;AAC1C,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;;;AC7BO,MAAM,oBAAoB,CAC/B,gBACA,SAAS,IACT,YAAY,SAAS,SAClB;AACH,UAAM,mBAAmB,UAAU,iBAA8B,UAAU,cAAc;AACzF,qBAAiB,QAAQ,CAAC,OAAO;AAC/B,SAAG,cAAc,eAAe,eAAe,IAAI;AAAA,IACrD,CAAC;AAAA,EACH;;;ACRA,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,YAAY;AAC9B,UAAM,gBAAgB,IAAI,cAAc;AACxC,UAAM,OAAO,MAAM,cAAc,UAAU;AAE3C,QAAI,MAAM;AACR,wBAAkB,KAAK,MAAM;AAAA,IAC/B,OAAO;AACL,cAAQ,MAAM,qBAAqB;AAAA,IACrC;AAAA,EACF,CAAC;",
  "names": []
}
